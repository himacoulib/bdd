package ml.satgrie.pl.ue.model;
// Generated 31 mars 2021 ï¿½ 17:28:15 by Hibernate Tools 5.2.12.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * Secteur generated by hbm2java
 */
@Entity
@Table(name = "secteur", catalog = "lastuebdd")

public class Secteur implements java.io.Serializable {

	private SecteurId id;
	private Chapitre chapitre;
	private String secteurCode;
	private String secteurName;
	private String secteurDescrip;
	private Integer lastModifiedBy;
	private Date lastModifiedDate;
	private Set<SousSecteur> soussecteurs = new HashSet<SousSecteur>(0);

	public Secteur() {
	}

	public Secteur(SecteurId id, Chapitre chapitre) {
		this.id = id;
		this.chapitre = chapitre;
	}

	public Secteur(SecteurId id, Chapitre chapitre, String secteurCode, String secteurName, String secteurDescrip,
			Integer lastModifiedBy, Date lastModifiedDate, Set<SousSecteur> soussecteurs) {
		this.id = id;
		this.chapitre = chapitre;
		this.secteurCode = secteurCode;
		this.secteurName = secteurName;
		this.secteurDescrip = secteurDescrip;
		this.lastModifiedBy = lastModifiedBy;
		this.lastModifiedDate = lastModifiedDate;
		this.soussecteurs = soussecteurs;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "chapitreId", column = @Column(name = "ChapitreID", nullable = false)),
			@AttributeOverride(name = "secteurId", column = @Column(name = "SecteurID", nullable = false)) })
	public SecteurId getId() {
		return this.id;
	}

	public void setId(SecteurId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ChapitreID", nullable = false, insertable = false, updatable = false)
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	public Chapitre getChapitre() {
		return this.chapitre;
	}

	public void setChapitre(Chapitre chapitre) {
		this.chapitre = chapitre;
	}

	@Column(name = "SecteurCode", length = 45)
	public String getSecteurCode() {
		return this.secteurCode;
	}

	public void setSecteurCode(String secteurCode) {
		this.secteurCode = secteurCode;
	}

	@Column(name = "SecteurName", length = 250)
	public String getSecteurName() {
		return this.secteurName;
	}

	public void setSecteurName(String secteurName) {
		this.secteurName = secteurName;
	}

	@Column(name = "SecteurDescrip")
	public String getSecteurDescrip() {
		return this.secteurDescrip;
	}

	public void setSecteurDescrip(String secteurDescrip) {
		this.secteurDescrip = secteurDescrip;
	}

	@Column(name = "LastModifiedBy")
	public Integer getLastModifiedBy() {
		return this.lastModifiedBy;
	}

	public void setLastModifiedBy(Integer lastModifiedBy) {
		this.lastModifiedBy = lastModifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LastModifiedDate", length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "secteur")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	public Set<SousSecteur> getSoussecteurs() {
		return this.soussecteurs;
	}

	public void setSoussecteurs(Set<SousSecteur> soussecteurs) {
		this.soussecteurs = soussecteurs;
	}

}

package ml.satgrie.pl.ue.model;
// Generated 31 mars 2021 ï¿½ 17:28:15 by Hibernate Tools 5.2.12.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * Chapitre generated by hbm2java
 */
@Entity
@Table(name = "chapitre", catalog = "lastuebdd")

public class Chapitre implements java.io.Serializable {

	private Integer chapitreId;
	private String chapitreCode;
	private String chapitreName;
	private String chapitreDesc;
	private Integer lastModifiedBy;
	private Date lastModifiedDate;
	private String iconeUrl;
	private Set<Secteur> secteurs = new HashSet<Secteur>(0);
	private Set<Projet> projets = new HashSet<Projet>(0);

	public Chapitre() {
	}

	public Chapitre(Integer chapitreId) {
		this.chapitreId = chapitreId;
	}

	public Chapitre(int chapitreId, String chapitreCode, String chapitreName, String chapitreDesc,
			Integer lastModifiedBy, Date lastModifiedDate, String iconeUrl, Set<Secteur> secteurs,
			Set<Projet> projets) {
		this.chapitreId = chapitreId;
		this.chapitreCode = chapitreCode;
		this.chapitreName = chapitreName;
		this.chapitreDesc = chapitreDesc;
		this.lastModifiedBy = lastModifiedBy;
		this.lastModifiedDate = lastModifiedDate;
		this.iconeUrl = iconeUrl;
		this.secteurs = secteurs;
		this.projets = projets;
	}

	@Id
	//@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ChapitreID", unique = true, nullable = false)
	public Integer getChapitreId() {
		return this.chapitreId;
	}

	public void setChapitreId(Integer chapitreId) {
		this.chapitreId = chapitreId;
	}

	@Column(name = "ChapitreCode", length = 50)
	public String getChapitreCode() {
		return this.chapitreCode;
	}

	public void setChapitreCode(String chapitreCode) {
		this.chapitreCode = chapitreCode;
	}

	@Column(name = "ChapitreName", length = 250)
	public String getChapitreName() {
		return this.chapitreName;
	}

	public void setChapitreName(String chapitreName) {
		this.chapitreName = chapitreName;
	}

	@Column(name = "ChapitreDesc", length = 250)
	public String getChapitreDesc() {
		return this.chapitreDesc;
	}

	public void setChapitreDesc(String chapitreDesc) {
		this.chapitreDesc = chapitreDesc;
	}

	@Column(name = "LastModifiedBy")
	public Integer getLastModifiedBy() {
		return this.lastModifiedBy;
	}

	public void setLastModifiedBy(Integer lastModifiedBy) {
		this.lastModifiedBy = lastModifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LastModifiedDate", length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@Column(name = "IconeURL", length = 250)
	public String getIconeUrl() {
		return this.iconeUrl;
	}

	public void setIconeUrl(String iconeUrl) {
		this.iconeUrl = iconeUrl;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "chapitre")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	public Set<Secteur> getSecteurs() {
		return this.secteurs;
	}

	public void setSecteurs(Set<Secteur> secteurs) {
		this.secteurs = secteurs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "chapitre")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	public Set<Projet> getProjets() {
		return this.projets;
	}

	public void setProjets(Set<Projet> projets) {
		this.projets = projets;
	}

}

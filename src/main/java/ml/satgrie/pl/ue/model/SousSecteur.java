package ml.satgrie.pl.ue.model;
// Generated 30 mars 2021 ï¿½ 17:13:07 by Hibernate Tools 5.2.12.Final

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * Soussecteur generated by hbm2java
 */
@Entity
@Table(name = "soussecteur", catalog = "lastuebdd")

public class SousSecteur implements java.io.Serializable {

	private SousSecteurId id;
	private Secteur secteur;
	private String sousSecteurCode;
	private String sousSecteurName;
	private String sousSecteurDescrip;
	private Integer lastModifiedBy;
	private Date lastModifiedDate;

	public SousSecteur() {
	}

	public SousSecteur(SousSecteurId id, Secteur secteur) {
		this.id = id;
		this.secteur = secteur;
	}

	public SousSecteur(SousSecteurId id, Secteur secteur, String sousSecteurCode, String sousSecteurName,
			String sousSecteurDescrip, Integer lastModifiedBy, Date lastModifiedDate) {
		this.id = id;
		this.secteur = secteur;
		this.sousSecteurCode = sousSecteurCode;
		this.sousSecteurName = sousSecteurName;
		this.sousSecteurDescrip = sousSecteurDescrip;
		this.lastModifiedBy = lastModifiedBy;
		this.lastModifiedDate = lastModifiedDate;
	}

	/**
	 * 
	 * @return
	 */
	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "chapitreId", column = @Column(name = "ChapitreID", nullable = false)),
			@AttributeOverride(name = "secteurId", column = @Column(name = "SecteurID", nullable = false)),
			@AttributeOverride(name = "sousSecteurId", column = @Column(name = "SousSecteurID", nullable = false)) })
	public SousSecteurId getId() {
		return this.id;
	}

	public void setId(SousSecteurId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "ChapitreID", referencedColumnName = "ChapitreID", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "SecteurID", referencedColumnName = "SecteurID", nullable = false, insertable = false, updatable = false) })
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	public Secteur getSecteur() {
		return this.secteur;
	}

	public void setSecteur(Secteur secteur) {
		this.secteur = secteur;
	}

	@Column(name = "SousSecteurCode", length = 45)
	public String getSousSecteurCode() {
		return this.sousSecteurCode;
	}

	public void setSousSecteurCode(String sousSecteurCode) {
		this.sousSecteurCode = sousSecteurCode;
	}

	@Column(name = "SousSecteurName", length = 250)
	public String getSousSecteurName() {
		return this.sousSecteurName;
	}

	public void setSousSecteurName(String sousSecteurName) {
		this.sousSecteurName = sousSecteurName;
	}

	@Column(name = "SousSecteurDescrip")
	public String getSousSecteurDescrip() {
		return this.sousSecteurDescrip;
	}

	public void setSousSecteurDescrip(String sousSecteurDescrip) {
		this.sousSecteurDescrip = sousSecteurDescrip;
	}

	@Column(name = "LastModifiedBy")
	public Integer getLastModifiedBy() {
		return this.lastModifiedBy;
	}

	public void setLastModifiedBy(Integer lastModifiedBy) {
		this.lastModifiedBy = lastModifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LastModifiedDate", length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

}

package ml.satgrie.pl.ue.model;
// Generated 31 mars 2021 ï¿½ 17:28:15 by Hibernate Tools 5.2.12.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * Profile generated by hbm2java
 */
@Entity
@Table(name = "profile", catalog = "lastuebdd")

public class Profile implements java.io.Serializable {

	private Integer profileId;
	private String profileNom;
	private Integer lastModifiedBy;
	private Date lastModifiedDate;
	private String profilDesc;
	private Boolean dashbaord;
	private Boolean projets;
	private Boolean rapports;
	private Boolean cartographie;
	private Boolean parametrage;
	private Boolean administration;
	private Boolean media;
	private Boolean calendrier;
	private Boolean moteurRecherche;
	private Boolean userManual;
	private Set<Utilisateur> utilisateurs = new HashSet<Utilisateur>(0);

	public Profile() {
		this.dashbaord = false;
		this.projets = false;
		this.rapports = false;
		this.cartographie = false;
		this.parametrage = false;
		this.administration = false;
		this.media = false;
		this.calendrier = false;
		this.moteurRecherche = false;
		this.userManual = false;
	}

	public Profile(String profileNom, Integer lastModifiedBy, Date lastModifiedDate, String profilDesc,
			Boolean dashbaord, Boolean projets, Boolean rapports, Boolean cartographie, Boolean parametrage,
			Boolean administration, Boolean media, Boolean calendrier, Boolean moteurRecherche, Boolean userManual,
			Set<Utilisateur> utilisateurs) {
		this.profileNom = profileNom;
		this.lastModifiedBy = lastModifiedBy;
		this.lastModifiedDate = lastModifiedDate;
		this.profilDesc = profilDesc;
		this.dashbaord = dashbaord;
		this.projets = projets;
		this.rapports = rapports;
		this.cartographie = cartographie;
		this.parametrage = parametrage;
		this.administration = administration;
		this.media = media;
		this.calendrier = calendrier;
		this.moteurRecherche = moteurRecherche;
		this.userManual = userManual;
		this.utilisateurs = utilisateurs;
	}

	@Id

	@Column(name = "ProfileID", unique = true, nullable = false)
	public Integer getProfileId() {
		return this.profileId;
	}

	public void setProfileId(Integer profileId) {
		this.profileId = profileId;
	}

	@Column(name = "ProfileNom", length = 100)
	public String getProfileNom() {
		return this.profileNom;
	}

	public void setProfileNom(String profileNom) {
		this.profileNom = profileNom;
	}

	@Column(name = "LastModifiedBy")
	public Integer getLastModifiedBy() {
		return this.lastModifiedBy;
	}

	public void setLastModifiedBy(Integer lastModifiedBy) {
		this.lastModifiedBy = lastModifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LastModifiedDate", length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@Column(name = "ProfilDesc", length = 250)
	public String getProfilDesc() {
		return this.profilDesc;
	}

	public void setProfilDesc(String profilDesc) {
		this.profilDesc = profilDesc;
	}

	@Column(name = "dashbaord")
	public Boolean getDashbaord() {
		return this.dashbaord;
	}

	public void setDashbaord(Boolean dashbaord) {
		this.dashbaord = dashbaord;
	}

	@Column(name = "Projets")
	public Boolean getProjets() {
		return this.projets;
	}

	public void setProjets(Boolean projets) {
		this.projets = projets;
	}

	@Column(name = "Rapports")
	public Boolean getRapports() {
		return this.rapports;
	}

	public void setRapports(Boolean rapports) {
		this.rapports = rapports;
	}

	@Column(name = "Cartographie")
	public Boolean getCartographie() {
		return this.cartographie;
	}

	public void setCartographie(Boolean cartographie) {
		this.cartographie = cartographie;
	}

	@Column(name = "parametrage")
	public Boolean getParametrage() {
		return this.parametrage;
	}

	public void setParametrage(Boolean parametrage) {
		this.parametrage = parametrage;
	}

	@Column(name = "administration")
	public Boolean getAdministration() {
		return this.administration;
	}

	public void setAdministration(Boolean administration) {
		this.administration = administration;
	}

	@Column(name = "media")
	public Boolean getMedia() {
		return this.media;
	}

	public void setMedia(Boolean media) {
		this.media = media;
	}

	@Column(name = "calendrier")
	public Boolean getCalendrier() {
		return this.calendrier;
	}

	public void setCalendrier(Boolean calendrier) {
		this.calendrier = calendrier;
	}

	@Column(name = "moteurRecherche")
	public Boolean getMoteurRecherche() {
		return this.moteurRecherche;
	}

	public void setMoteurRecherche(Boolean moteurRecherche) {
		this.moteurRecherche = moteurRecherche;
	}

	@Column(name = "userManual")
	public Boolean getUserManual() {
		return this.userManual;
	}

	public void setUserManual(Boolean userManual) {
		this.userManual = userManual;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "profile")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	public Set<Utilisateur> getUtilisateurs() {
		return this.utilisateurs;
	}

	public void setUtilisateurs(Set<Utilisateur> utilisateurs) {
		this.utilisateurs = utilisateurs;
	}

}

package ml.satgrie.pl.ue.model;
// Generated 31 mars 2021 ï¿½ 17:28:15 by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

/**
 * Utilisateur generated by hbm2java
 */
@Entity
@Table(name = "utilisateur", catalog = "lastuebdd")


public class Utilisateur implements java.io.Serializable {

	private Integer utilisateurId;
	private Profile profile;
	private String utilisateurNom;
	private String utilisateurPrenom;
	private String utilisateurTel;
	private String utilisateurEmail;
	private String utilisateurPwd;
	private Set<Projet> projets = new HashSet<Projet>(0);
	private SourceFinancement sourcefinancement;

	public Utilisateur() {
		super();
	}

	public Utilisateur(Profile profile) {
		this.profile = profile;
	}

	public Utilisateur(Profile profile, String utilisateurNom, String utilisateurPrenom, String utilisateurTel,
			String utilisateurEmail, String utilisateurPwd, Set<Projet> projets, SourceFinancement sourcefinancement) {
		this.profile = profile;
		this.utilisateurNom = utilisateurNom;
		this.utilisateurPrenom = utilisateurPrenom;
		this.utilisateurTel = utilisateurTel;
		this.utilisateurEmail = utilisateurEmail;
		this.utilisateurPwd = utilisateurPwd;
		this.projets = projets;
		this.sourcefinancement = sourcefinancement;
	}

	@Id
	@Column(name = "UtilisateurID", unique = true, nullable = false)
	public Integer getUtilisateurId() {
		return this.utilisateurId;
	}

	public void setUtilisateurId(Integer utilisateurId) {
		this.utilisateurId = utilisateurId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ProfileID", nullable = false)
	@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
	public Profile getProfile() {
		return this.profile;
	}

	public void setProfile(Profile profile) {
		this.profile = profile;
	}

	@Column(name = "UtilisateurNom", length = 45)
	public String getUtilisateurNom() {
		return this.utilisateurNom;
	}

	public void setUtilisateurNom(String utilisateurNom) {
		this.utilisateurNom = utilisateurNom;
	}

	@Column(name = "UtilisateurPrenom", length = 45)
	public String getUtilisateurPrenom() {
		return this.utilisateurPrenom;
	}

	public void setUtilisateurPrenom(String utilisateurPrenom) {
		this.utilisateurPrenom = utilisateurPrenom;
	}

	@Column(name = "UtilisateurTel", length = 45)
	public String getUtilisateurTel() {
		return this.utilisateurTel;
	}

	public void setUtilisateurTel(String utilisateurTel) {
		this.utilisateurTel = utilisateurTel;
	}

	@Column(name = "UtilisateurEmail", length = 45)
	public String getUtilisateurEmail() {
		return this.utilisateurEmail;
	}

	public void setUtilisateurEmail(String utilisateurEmail) {
		this.utilisateurEmail = utilisateurEmail;
	}

	@Column(name = "UtilisateurPwd", length = 45)
	public String getUtilisateurPwd() {
		return this.utilisateurPwd;
	}

	public void setUtilisateurPwd(String utilisateurPwd) {
		this.utilisateurPwd = utilisateurPwd;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
	public Set<Projet> getProjets() {
		return this.projets;
	}

	public void setProjets(Set<Projet> projets) {
		this.projets = projets;
	}

	/**
	 * @return the sourcefinancement
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SourceFinancementID")
	@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
	public SourceFinancement getSourcefinancement() {
		return sourcefinancement;
	}

	/**
	 * @param sourcefinancement the sourcefinancement to set
	 */
	public void setSourcefinancement(SourceFinancement sourcefinancement) {
		this.sourcefinancement = sourcefinancement;
	}

}

package ml.satgrie.pl.ue.model;
// Generated 31 mars 2021 ï¿½ 17:28:15 by Hibernate Tools 5.2.12.Final

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * Commune generated by hbm2java
 */
@Entity
@Table(name = "commune", catalog = "lastuebdd")

public class Commune implements java.io.Serializable {

	private CommuneId id;
	private Cercle cercle;
	private String communeNom;
	private String communeLat;
	private String communeLong;
	private Integer communeLastModifiedBy;
	private Date communeLastModifiedDate;

	public Commune() {
	}

	public Commune(CommuneId id, Cercle cercle, Date communeLastModifiedDate) {
		this.id = id;
		this.cercle = cercle;
		this.communeLastModifiedDate = communeLastModifiedDate;
	}

	public Commune(CommuneId id, Cercle cercle, String communeNom, String communeLat, String communeLong,
			Integer communeLastModifiedBy, Date communeLastModifiedDate) {
		this.id = id;
		this.cercle = cercle;
		this.communeNom = communeNom;
		this.communeLat = communeLat;
		this.communeLong = communeLong;
		this.communeLastModifiedBy = communeLastModifiedBy;
		this.communeLastModifiedDate = communeLastModifiedDate;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "paysId", column = @Column(name = "PaysID", nullable = false)),
			@AttributeOverride(name = "regionId", column = @Column(name = "RegionID", nullable = false)),
			@AttributeOverride(name = "cerlceId", column = @Column(name = "CerlceID", nullable = false)),
			@AttributeOverride(name = "communeId", column = @Column(name = "CommuneID", nullable = false)) })
	public CommuneId getId() {
		return this.id;
	}

	public void setId(CommuneId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	@JoinColumns({
			@JoinColumn(name = "PaysID", referencedColumnName = "PaysID", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "RegionID", referencedColumnName = "RegionID", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CerlceID", referencedColumnName = "CerlceID", nullable = false, insertable = false, updatable = false) })
	public Cercle getCercle() {
		return this.cercle;
	}

	public void setCercle(Cercle cercle) {
		this.cercle = cercle;
	}

	@Column(name = "CommuneNom", length = 100)
	public String getCommuneNom() {
		return this.communeNom;
	}

	public void setCommuneNom(String communeNom) {
		this.communeNom = communeNom;
	}

	@Column(name = "CommuneLat", length = 45)
	public String getCommuneLat() {
		return this.communeLat;
	}

	public void setCommuneLat(String communeLat) {
		this.communeLat = communeLat;
	}

	@Column(name = "CommuneLong", length = 45)
	public String getCommuneLong() {
		return this.communeLong;
	}

	public void setCommuneLong(String communeLong) {
		this.communeLong = communeLong;
	}

	@Column(name = "CommuneLastModifiedBy")
	public Integer getCommuneLastModifiedBy() {
		return this.communeLastModifiedBy;
	}

	public void setCommuneLastModifiedBy(Integer communeLastModifiedBy) {
		this.communeLastModifiedBy = communeLastModifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CommuneLastModifiedDate", nullable = false, length = 19)
	public Date getCommuneLastModifiedDate() {
		return this.communeLastModifiedDate;
	}

	public void setCommuneLastModifiedDate(Date communeLastModifiedDate) {
		this.communeLastModifiedDate = communeLastModifiedDate;
	}

}
